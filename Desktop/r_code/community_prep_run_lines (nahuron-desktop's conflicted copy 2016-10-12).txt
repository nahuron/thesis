#####Prep script for community sorter

library(gdistance)
setwd("/home/nicholas/Dropbox/STUDENT FOLDERS/Huron, Nick/Huron_Nick_Masters/locality_data/")

	#setClass(Class="CommunitiesStack", representation(sim.com.matrix="matrix", extent.stack="list", coms="list", com.extent="data.frame"))	#use @ notation to get at individual pieces


read.csv("/home/nicholas/Dropbox/STUDENT FOLDERS/Huron, Nick/Huron_Nick_Masters/locality_data/Brachymeles.unique.locality.May2016.csv", header=T)->brach

#####run script for community sorter

sorted2 <- com.sorter(brach, gridsize=0.05, writeCSV=T, writepath=paste("/home/nicholas/Dropbox/STUDENT FOLDERS/Huron, Nick/Huron_Nick_Masters/results","sim.com.matrix.csv",sep="/"))

#####Prep script for bias map editor v2.0

library(raster)

setwd("/Users/nicholashuron/Desktop/niche_overlap_tests/")

{
#create environmental layer stack

env.files <- list.files(path = "/Users/nicholashuron/Desktop/niche_overlap_tests/climate_data/", pattern = "\\.asc$", full.names = TRUE)
env <- stack(env.files)
crs(env) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84"

bath <- raster("/Users/nicholashuron/Desktop/climate_data.tif")
crs(bath) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84"

#clip the bathymetric data to the extent of interest

bath.clipped <- intersect(bath, env)
crs(bath.clipped) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84"

bath.clipped[bath.clipped>=-120 & bath.clipped<=0]
value<-0;for(i in -120:0){freq(bath.clipped, value=i)->x; value=value+x}
value
length(bath.clipped[bath.clipped>=-120 & bath.clipped<=0])

bath.clipped[bath.clipped>=-120 & bath.clipped<=0] <- 0

rasterToPoints(bath.clipped, fun=function(x){0>=x & -120<=x})->bath.clipped2

#recode all cells with values between -120 and 0 with -130
rec <- matrix(c(-9820,0,-130))
rec <- t(rec)
bath.clippedv2 <- reclassify(bath.clipped, rec)
plot(bath.clippedv2)


#isolate the bicol-samar channel and bring into a separate item
bicsam.extent <- extent(123.8959, xmax=124.780, ymin=12.3278,ymax=12.877)
bicsam <- intersect(bath, bicsam.extent)
plot(bicsam)

#isolate the bohol-cebu channel

bohceb.extent <- extent(123.99035, xmax=124.1344, ymin=10.15742, ymax=10.2893)
bohceb <- intersect(bath, bohceb.extent)
plot(bohceb)

#recode those values to -130 m

bicsam[bicsam>=-120 & bicsam<=0] <- -130
bohceb[bohceb>=-120 & bohceb<=0] <- -130

bath.clippedv2 <- merge(bicsam, bath.clipped)
bath.clippedv2 <- merge(bohceb, bath.clippedv2)

rec2 <- matrix(c(-9821,-121.00001,NA, -121.99999,2685,1),ncol=2)
rec2 <- t(rec2)
bath.clippedv3 <- reclassify(bath.clippedv2, rec2)
crs(bath.clippedv3) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84"
dev.new()
plot(bath.clippedv3, col=c("red","blue"), breaks=c(NA,0,1))


#save file!
writeRaster(bath.clippedv3, filename="PAICS.asc", format="ascii", overwrite=T)

#obtain cell numbers for the desired extent and the main raster
bicsam.cells <- cellsFromExtent(bath.clipped, extent=bicsam)

bicsam.focalcells <- cellsFromExtent(bath.clipped, extent=bicsam[bicsam>=-120 & bicsam<=0])


tr1 <- transition(bath.clippedv3, transitionFunction=mean, 16)
dev.new()
image(raster(tr1))

tr2 <- geoCorrection(tr1, type="c", scl=TRUE)

}


#####run script for bias map editor v2.0

connect<-comchecker(sorted2$sim.com.matrix, sorted2$com.extent, bath.clippedv3, brach, writeCSV=F)



#####run full sorter and editor script loop

 setwd("/Users/nicholashuron/Desktop/niche_overlap_tests/communities")

#for (aa in seq(from=1.00, to=0.05, by=-0.05))	{
for(aa in 0.05)	{

	print(paste0("Replicate: ", "revised_com_", as.character(aa), ".csv"))
		
	draftcom <- com.sorter(brach, gridsize=aa, writeCSV=F)
	revisedcom <- comchecker(draftcom$sim.com.matrix, draftcom$com.extent, bath.clippedv3, brach, writeCSV=F)
	
	#assign(paste0("revised_com_", as.character(aa)), revisedcom)
	
	write.csv(revisedcom, file=paste(getwd(), paste0("revised_com_", as.character(aa), ".csv"), sep="/"))
	
	draftcom <- {}
	revisedcom <- {}
	rm(list=as.character(paste0("revised_com_", as.character(aa))))
	
												}
